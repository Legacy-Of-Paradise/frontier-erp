using Content.Shared._DV.CCVars;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;
using Content.Shared._LOP.LOPCCVars; // _LOP change

namespace Content.Client._DV.Options.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class DeltaTab : Control
{
    [Dependency] private readonly IConfigurationManager _cfg = default!;

    public DeltaTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        DisableFiltersCheckBox.OnToggled += OnCheckBoxToggled;
        DisableFiltersCheckBox.Pressed = _cfg.GetCVar(DCCVars.NoVisionFilters);

        //_LOP changes START
        ChatIconsEnableCheckBox.OnToggled += OnCheckBoxToggled;
        ChatIconsEnableCheckBox.Pressed = _cfg.GetCVar(LOP_CCVars.ChatIconsEnable);
        //_LOP changes END

        ApplyButton.OnPressed += OnApplyButtonPressed;
        UpdateApplyButton();
    }

    private void OnCheckBoxToggled(BaseButton.ButtonToggledEventArgs args)
    {
        UpdateApplyButton();
    }

    private void OnApplyButtonPressed(BaseButton.ButtonEventArgs args)
    {
        _cfg.SetCVar(DCCVars.NoVisionFilters, DisableFiltersCheckBox.Pressed);
        _cfg.SetCVar(LOP_CCVars.ChatIconsEnable, ChatIconsEnableCheckBox.Pressed); // _LOP changes

        _cfg.SaveToFile();
        UpdateApplyButton();
    }

    private void UpdateApplyButton()
    {
        var isNoVisionFiltersSame = DisableFiltersCheckBox.Pressed == _cfg.GetCVar(DCCVars.NoVisionFilters);
        //_LOP changes START
        var isNoVisionJobIconChat = ChatIconsEnableCheckBox.Pressed == _cfg.GetCVar(LOP_CCVars.ChatIconsEnable);

        ApplyButton.Disabled = isNoVisionFiltersSame && isNoVisionJobIconChat;
        //_LOP changes END
    }
}
